{
    "collab_server" : "",
    "contents" : "# select and transform covariates\n\n# clear workspace\nrm(list = ls())\n\n# set RNG seed for reproducibility\nset.seed(1)\n\n# load packages\nlibrary(seegSDM)\nlibrary(seegMBG)\nlibrary(parallel)\n\n# load misc functions\nsource('code/functions.R')\n\n# set default options\ndefaultOptions()\n\n\n# ~~~~~~~~~~~~~\n# load data\n\n\n# mortality data\ndf <- read.csv('data/clean/fully_processed.csv',\n               stringsAsFactors = FALSE)\ndf = subset(df,age_bin %in% 1:4)\n\n\n# keep only Mozambique data\nif(getOption('country')=='MOZ')\n  df <- df[df$country == 'Mozambique', ]\n\n\n# non-temporal candidate covariates\ncovs <- brick('data/clean/covariates_5_africa.grd')\n\n\n# temporally-varying covariates\nevi         <- brick('data/raw/covariates/new_20160412/evi.tif')\nfertility   <- brick('data/raw/covariates/new_20160412/fertility.tif')\nlights      <- brick('data/raw/covariates/new_20160412/lights_new.tif')\nLST_day     <- brick('data/raw/covariates/new_20160412/LST_day.tif')\ntotal_pop   <- brick('data/raw/covariates/new_20160412/total_pop.tif')\n\n#covs[['pop']]<-covs[['pop2']]<-covs[['lights']]<-covs[['lights2']]<-NULL\n\n# make sure NAs are coded as such\nevi[evi==-9999]=NA\nLST_day[LST_day==-9999]=NA\ntotal_pop[total_pop==-9999]=NA\n  \n# make covs a named list to be fed into gam, with non-temporal as RasterLayers and temporal as Raster-Bricks\n# remove any non-temporal covariates that are included temporally\nlcovs=list(access=covs[['access']],\n           aridity=covs[['aridity']],\n           irrigation=covs[['irrigation']],           \n           pet=covs[['pet']],             \n           dem=covs[['dem']],             \n           evi=evi,\n           fertility=fertility,\n           lights=lights,\n           LST_day=LST_day,\n           total_pop=total_pop)\n\n\n# mask out country, if applicable\n# admin units\nif(getOption('country')!='') {\n  cntry <- shapefile(paste0('data/clean/shapefiles/',getOption('country'),'_simple.shp'))\n  covs <- mask(crop(covs, cntry),cntry)\n}\n\n\n\n\n# ~~~~~~~~~~~~\n# keep only point cbh data & get required columns\n\ndf <- df[df$data_type == 'cbh' & df$weight == 1, ]\n\ncoords <- df[, c('long', 'lat')]\ncoords$lat=as.numeric(coords$lat)\ncoords$long=as.numeric(coords$long)\n\nresponse <- cbind(died = df$died,\n                  lived = df$exposed - df$died)\n\nextra_data <- data.frame(year = df$year,\n                         age_bin = factor(df$age_bin))\n\n# ~~~~~~~~~~~\n# fit gam for each age bin\n\nif(nrow(df)>50000) {\n  idx_fit <- sample(1:nrow(df), 50000)\n} else {\n  idx_fit <- sample(1:nrow(df),nrow(df))\n}\n\nsystem.time(trans <- gamTrans(coords[idx_fit, ],\n                              response[idx_fit, ],\n                              covs=lcovs,\n                              family = binomial,\n                              extra_terms = ~ year + age_bin,\n                              extra_data = extra_data[idx_fit, , drop = FALSE],\n                              bam = TRUE,\n                              predict = TRUE,\n                              condition = NULL,\n                              condition_covs = NULL,\n                              s_args = list(bs = 'ts', k = 3),\n                              samfrac = 0.1,\n                              use.chol = TRUE))\n\n\n# use chi-squared stats to determine covariate usefulness\nkeep <- which(summary(trans$model)$chi.sq > 0.1)\n\ntrans_ras <- trans$trans[[keep]]\n\n# clamp covariates\n\n# find most extreme vaaues of trnasofmred covariates that were observed\nvals <- extract(trans_ras, coords[idx_fit, ])\nsry <- apply(vals, 2, range, na.rm = TRUE)\n\n# clamp the covariates to these values\nfor (i in 1:nlayers(trans_ras)) {\n  range <- sry[, colnames(sry) == names(trans_ras)[i]]\n  trans_ras[[i]][trans_ras[[i]] < range[1]] <- range[1]\n  trans_ras[[i]][trans_ras[[i]] > range[2]] <- range[2]\n}\n\n# save these\nwriteRaster(trans_ras,\n            file = paste0('data/clean/covs_transformed',getOption('country')),\n            overwrite = TRUE)\n\nm <- trans$model\n\nsave(m,\n     file = paste0('data/clean/trans_gam',getOption('country'),'.RData'))\n",
    "created" : 1460665117768.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1194551724",
    "id" : "E090C47F",
    "lastKnownWriteTime" : 1460677790,
    "last_content_update" : 1460677790408,
    "path" : "J:/temp/geospatial/U5M_africa/code/select_transform_clamp_covariates.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}